{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","startItem","endItem","onPageChange","lastPage","Math","ceil","countPage","items","className","classNames","disabled","href","onClick","map","number","active","item","App","useState","setPerPage","setCurrentPage","setStartItem","setEndItem","id","value","onChange","event","newPerPage","target","htmlFor","page","min","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKR,EAAQC,GAC7BQ,EAAYhB,EAAW,EAAGa,GAC1BI,EAAQjB,EAAWU,EAAWC,GAcpC,OACE,qCACE,qBAAIO,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAA0B,IAAhBX,IAHd,SAOE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QArBe,WACH,IAAhBb,GACFG,EAAaH,EAAc,IAcvB,oBAWDO,EAAUO,KAAI,SAAAC,GAAM,OACnB,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAAWf,IALzB,SASE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAdEA,MAkBT,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUX,IAAgBI,IAH9B,SAOE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBI,EAC/BS,QAjEe,WACnBb,IAAgBI,GAClBD,EAAaH,EAAc,IA0DvB,uBAYJ,6BACGQ,EAAMM,KAAI,SAAAG,GAAI,OACb,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YC/FrBC,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOlB,EAAP,KAAkBqB,EAAlB,KACA,EAA8BH,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBqB,EAAhB,KAiBA,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCC,EADjC,cACgDC,EADhD,eAzBU,GAyBV,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAO1B,EACP2B,SA9BW,SAACC,GACpB,IAAMC,GAAcD,EAAME,OAAOJ,MAEjCL,EAAWQ,GACXP,EAAe,GACfC,EAAa,GACbC,EAAWK,IAmBL,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEX,MAlDQ,GAmDRC,QAASA,EACTC,YAAaA,EACbG,aAtCmB,SAAC4B,GACxBV,EAAeU,GACfT,EAAavB,EAAUgC,EAAO,EAAIhC,GAClCwB,EAAWlB,KAAK2B,IAlBJ,GAkBejC,EAAUgC,KAoCjC9B,UAAWA,EACXC,QAASA,QCzDjB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1a4cb84b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  startItem: number,\n  endItem: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  startItem,\n  endItem,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const countPage = getNumbers(1, lastPage);\n  const items = getNumbers(startItem, endItem);\n\n  const handleNextButton = () => {\n    if (currentPage !== lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrevButton = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevButton}\n          >\n            «\n          </a>\n        </li>\n\n        {countPage.map(number => (\n          <li\n            key={number}\n            className={classNames(\n              'page-item',\n              {\n                active: number === currentPage,\n              },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => onPageChange(number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === lastPage,\n          },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={handleNextButton}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startItem, setStartItem] = useState(1);\n  const [endItem, setEndItem] = useState(5);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = +event.target.value;\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n    setStartItem(1);\n    setEndItem(newPerPage);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n    setStartItem(perPage * page + 1 - perPage);\n    setEndItem(Math.min(total, perPage * page));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n        startItem={startItem}\n        endItem={endItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}